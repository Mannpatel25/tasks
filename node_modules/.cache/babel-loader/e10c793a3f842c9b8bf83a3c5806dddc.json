{"ast":null,"code":"var _jsxFileName = \"/Users/mannpatel/tasks/src/form-components/GiveAttempts.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GiveAttempts() {\n  _s();\n\n  const [attempt, setattempt] = useState(3);\n  const [reqattempt, setreqattempt] = useState(\"0\");\n\n  function checkforzero() {\n    if (attempt == 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Give Attempts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n      children: \"Increase Attempt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Attempts remaining: \", attempt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"number\",\n      value: reqattempt,\n      onChange: event => setreqattempt(event.target.value.length != 0 ? event.target.value : \"0\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setattempt(attempt - 1),\n      disabled: checkforzero(),\n      children: \"Use\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setattempt(attempt + parseInt(reqattempt)),\n      children: \"Gain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GiveAttempts, \"NsmOzwPlUXKROnd6PhtnRdN8jYI=\");\n\n_c = GiveAttempts;\n\nvar _c;\n\n$RefreshReg$(_c, \"GiveAttempts\");","map":{"version":3,"sources":["/Users/mannpatel/tasks/src/form-components/GiveAttempts.tsx"],"names":["React","useState","Button","Form","GiveAttempts","attempt","setattempt","reqattempt","setreqattempt","checkforzero","event","target","value","length","parseInt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;;AAEA,OAAO,SAASC,YAAT,GAAqC;AAAA;;AAIxC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAS,CAAT,CAAtC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAS,GAAT,CAA5C;;AACA,WAASQ,YAAT,GAAiC;AAC7B,QAAIJ,OAAO,IAAI,CAAf,EAAkB;AACd,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AACD,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,yCAA2BA,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,IAAD,CAAM,OAAN;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAEE,UAFX;AAGI,MAAA,QAAQ,EAAGG,KAAD,IACNF,aAAa,CACTE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,IAA6B,CAA7B,GACMH,KAAK,CAACC,MAAN,CAAaC,KADnB,GAEM,GAHG;AAJrB;AAAA;AAAA;AAAA;AAAA,YAJJ,eAeI,QAAC,MAAD;AACI,MAAA,OAAO,EAAE,MAAMN,UAAU,CAACD,OAAO,GAAG,CAAX,CAD7B;AAEI,MAAA,QAAQ,EAAEI,YAAY,EAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,eAqBI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMH,UAAU,CAACD,OAAO,GAAGS,QAAQ,CAACP,UAAD,CAAnB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GAvCeH,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nexport function GiveAttempts(): JSX.Element {\n    type ChangeEvent = React.ChangeEvent<\n        HTMLTextAreaElement | HTMLInputElement\n    >;\n    const [attempt, setattempt] = useState<number>(3);\n    const [reqattempt, setreqattempt] = useState<string>(\"0\");\n    function checkforzero(): boolean {\n        if (attempt == 0) {\n            return true;\n        }\n        return false;\n    }\n    return (\n        <div>\n            <h3>Give Attempts</h3>\n            <Form.Label>Increase Attempt</Form.Label>\n            <span>Attempts remaining: {attempt}</span>\n            <Form.Control\n                type=\"number\"\n                value={reqattempt}\n                onChange={(event: ChangeEvent) =>\n                    setreqattempt(\n                        event.target.value.length != 0\n                            ? event.target.value\n                            : \"0\"\n                    )\n                }\n            />\n            <Button\n                onClick={() => setattempt(attempt - 1)}\n                disabled={checkforzero()}\n            >\n                Use\n            </Button>\n            <Button onClick={() => setattempt(attempt + parseInt(reqattempt))}>\n                Gain\n            </Button>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}