{"ast":null,"code":"var _jsxFileName = \"/Users/mannpatel/tasks/src/form-components/MultipleChoiceQuestion.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MultipleChoiceQuestion(_ref) {\n  _s();\n\n  let {\n    options,\n    expectedAnswer\n  } = _ref;\n  const [editChoice, setEditChoice] = useState(options[0]);\n\n  function updateChoice(event) {\n    setEditChoice(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Multiple Choice Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n      value: editChoice,\n      onChange: updateChoice,\n      children: options.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: opt,\n        children: opt\n      }, opt, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: editChoice == expectedAnswer ? \"✔️\" : \"❌\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MultipleChoiceQuestion, \"NI6CdttNVHsWLRV1no4VZPUUaNA=\");\n\n_c = MultipleChoiceQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleChoiceQuestion\");","map":{"version":3,"sources":["/Users/mannpatel/tasks/src/form-components/MultipleChoiceQuestion.tsx"],"names":["React","useState","Form","MultipleChoiceQuestion","options","expectedAnswer","editChoice","setEditChoice","updateChoice","event","target","value","map","opt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,OAAO,SAASC,sBAAT,OAMS;AAAA;;AAAA,MANuB;AACnCC,IAAAA,OADmC;AAEnCC,IAAAA;AAFmC,GAMvB;AAIZ,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAASG,OAAO,CAAC,CAAD,CAAhB,CAA5C;;AACA,WAASI,YAAT,CAAsBC,KAAtB,EAA0C;AACtCF,IAAAA,aAAa,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACH;;AACD,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAEL,UAApB;AAAgC,MAAA,QAAQ,EAAEE,YAA1C;AAAA,gBACKJ,OAAO,CAACQ,GAAR,CAAaC,GAAD,iBACT;AAAkB,QAAA,KAAK,EAAEA,GAAzB;AAAA,kBACKA;AADL,SAAaA,GAAb;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAA,gBAAOP,UAAU,IAAID,cAAd,GAA+B,IAA/B,GAAsC;AAA7C;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA3BeF,sB;;KAAAA,sB","sourcesContent":["import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nexport function MultipleChoiceQuestion({\n    options,\n    expectedAnswer\n}: {\n    options: string[];\n    expectedAnswer: string;\n}): JSX.Element {\n    type ChangeEvent = React.ChangeEvent<\n        HTMLTextAreaElement | HTMLInputElement | HTMLSelectElement\n    >;\n    const [editChoice, setEditChoice] = useState<string>(options[0]);\n    function updateChoice(event: ChangeEvent) {\n        setEditChoice(event.target.value);\n    }\n    return (\n        <div>\n            <h3>Multiple Choice Question</h3>\n            <Form.Select value={editChoice} onChange={updateChoice}>\n                {options.map((opt: string) => (\n                    <option key={opt} value={opt}>\n                        {opt}\n                    </option>\n                ))}\n            </Form.Select>\n            <span>{editChoice == expectedAnswer ? \"✔️\" : \"❌\"}</span>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}