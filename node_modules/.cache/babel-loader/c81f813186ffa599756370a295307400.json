{"ast":null,"code":"var _jsxFileName = \"/Users/mannpatel/tasks/src/form-components/CheckAnswer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CheckAnswer(_ref) {\n  _s();\n\n  let {\n    expectedAnswer\n  } = _ref;\n  const [answer, setAnswer] = useState(\"\");\n\n  function setName(event) {\n    setAnswer(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Check Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n      children: \"Answer Box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      value: answer,\n      onChange: setName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"result: \", answer == expectedAnswer ? \"✔️\" : \"❌\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckAnswer, \"nLE+xPgtaAaLwlMs7GM3CI4lZyQ=\");\n\n_c = CheckAnswer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckAnswer\");","map":{"version":3,"sources":["/Users/mannpatel/tasks/src/form-components/CheckAnswer.tsx"],"names":["React","useState","Form","CheckAnswer","expectedAnswer","answer","setAnswer","setName","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,OAAO,SAASC,WAAT,OAIS;AAAA;;AAAA,MAJY;AACxBC,IAAAA;AADwB,GAIZ;AAIZ,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAS,EAAT,CAApC;;AACA,WAASM,OAAT,CAAiBC,KAAjB,EAAqC;AACjCF,IAAAA,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACH;;AACD,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,EAAEL,MAArB;AAA6B,MAAA,QAAQ,EAAEE;AAAvC;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,6BAAeF,MAAM,IAAID,cAAV,GAA2B,IAA3B,GAAkC,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GApBeD,W;;KAAAA,W","sourcesContent":["import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nexport function CheckAnswer({\n    expectedAnswer\n}: {\n    expectedAnswer: string;\n}): JSX.Element {\n    type ChangeEvent = React.ChangeEvent<\n        HTMLTextAreaElement | HTMLInputElement\n    >;\n    const [answer, setAnswer] = useState<string>(\"\");\n    function setName(event: ChangeEvent) {\n        setAnswer(event.target.value);\n    }\n    return (\n        <div>\n            <h3>Check Answer</h3>\n            <Form.Label>Answer Box</Form.Label>\n            <Form.Control value={answer} onChange={setName} />\n            <span>result: {answer == expectedAnswer ? \"✔️\" : \"❌\"}</span>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}