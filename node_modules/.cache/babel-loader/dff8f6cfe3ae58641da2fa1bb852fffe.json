{"ast":null,"code":"var _jsxFileName = \"/Users/mannpatel/tasks/src/form-components/ChangeColor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = [\"red\", \"green\", \"orange\", \"blue\", \"purple\", \"cyan\", \"magenta\", \"white\", \"black\"];\nexport function ChangeColor() {\n  _s();\n\n  function updateColor(event) {\n    setColor(event.target.value);\n  }\n\n  const [colo, setColor] = useState(\"red\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Change Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), colors.map(color => /*#__PURE__*/_jsxDEV(Form.Check, {\n      value: color,\n      type: \"radio\",\n      id: \"pick color\",\n      label: color,\n      name: \"color\",\n      checked: color == colo,\n      onChange: updateColor,\n      style: {\n        backgroundColor: color\n      }\n    }, color, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-testid\": \"colored-box\",\n        style: {\n          backgroundColor: colo\n        },\n        children: colo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChangeColor, \"Zazou7BSc3OHFCcviYotp9BnGzQ=\");\n\n_c = ChangeColor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeColor\");","map":{"version":3,"sources":["/Users/mannpatel/tasks/src/form-components/ChangeColor.tsx"],"names":["React","useState","Form","colors","ChangeColor","updateColor","event","setColor","target","value","colo","map","color","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,MAAM,GAAG,CACX,KADW,EAEX,OAFW,EAGX,QAHW,EAIX,MAJW,EAKX,QALW,EAMX,MANW,EAOX,SAPW,EAQX,OARW,EASX,OATW,CAAf;AAYA,OAAO,SAASC,WAAT,GAAoC;AAAA;;AAIvC,WAASC,WAAT,CAAqBC,KAArB,EAAyC;AACrCC,IAAAA,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAR;AACH;;AACD,QAAM,CAACC,IAAD,EAAOH,QAAP,IAAmBN,QAAQ,CAAS,KAAT,CAAjC;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKE,MAAM,CAACQ,GAAP,CAAYC,KAAD,iBACR,QAAC,IAAD,CAAM,KAAN;AAEI,MAAA,KAAK,EAAEA,KAFX;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,EAAE,EAAC,YAJP;AAKI,MAAA,KAAK,EAAEA,KALX;AAMI,MAAA,IAAI,EAAC,OANT;AAOI,MAAA,OAAO,EAAEA,KAAK,IAAIF,IAPtB;AAQI,MAAA,QAAQ,EAAEL,WARd;AASI,MAAA,KAAK,EAAE;AAAEQ,QAAAA,eAAe,EAAED;AAAnB;AATX,OACSA,KADT;AAAA;AAAA;AAAA;AAAA,YADH,CAFL,eAeI;AAAA,6BACI;AACI,uBAAY,aADhB;AAEI,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAEH;AAAnB,SAFX;AAAA,kBAIKA;AAJL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAlCeN,W;;KAAAA,W","sourcesContent":["import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst colors = [\n    \"red\",\n    \"green\",\n    \"orange\",\n    \"blue\",\n    \"purple\",\n    \"cyan\",\n    \"magenta\",\n    \"white\",\n    \"black\"\n];\n\nexport function ChangeColor(): JSX.Element {\n    type ChangeEvent = React.ChangeEvent<\n        HTMLTextAreaElement | HTMLInputElement\n    >;\n    function updateColor(event: ChangeEvent) {\n        setColor(event.target.value);\n    }\n    const [colo, setColor] = useState<string>(\"red\");\n    return (\n        <div>\n            <h3>Change Color</h3>\n            {colors.map((color: string) => (\n                <Form.Check\n                    key={color}\n                    value={color}\n                    type=\"radio\"\n                    id=\"pick color\"\n                    label={color}\n                    name=\"color\"\n                    checked={color == colo}\n                    onChange={updateColor}\n                    style={{ backgroundColor: color }}\n                ></Form.Check>\n            ))}\n            <div>\n                <span\n                    data-testid=\"colored-box\"\n                    style={{ backgroundColor: colo }}\n                >\n                    {colo}\n                </span>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}