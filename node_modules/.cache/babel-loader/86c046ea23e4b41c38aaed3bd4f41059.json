{"ast":null,"code":"var _jsxFileName = \"/Users/mannpatel/tasks/src/form-components/EditMode.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EditMode() {\n  _s();\n\n  const [editState, setEditState] = useState(false);\n  const [userName, setUserName] = useState(\"Your Name\");\n  const [checkstudent, setcheckstudent] = useState(true);\n\n  function updatecheckstudent(event) {\n    setcheckstudent(event.target.checked);\n  }\n\n  function updateEditState(event) {\n    setEditState(event.target.checked);\n  }\n\n  function updateName(event) {\n    setUserName(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"switch\",\n          id: \"is-switch-on\",\n          label: \"Edit Mode?\",\n          checked: editState,\n          onChange: updateEditState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: editState && /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"switch\",\n          id: \"is-student\",\n          label: \"Student?\",\n          checked: checkstudent,\n          onChange: updatecheckstudent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: editState && /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"changeTextBox\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Change Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"string\",\n            value: userName,\n            onChange: updateName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [userName, \" \", checkstudent ? \"is\" : \"is not\", \" a student\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditMode, \"xYg6JziSIa1JZFIuAe9GmY5uK6s=\");\n\n_c = EditMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMode\");","map":{"version":3,"sources":["/Users/mannpatel/tasks/src/form-components/EditMode.tsx"],"names":["React","useState","Form","EditMode","editState","setEditState","userName","setUserName","checkstudent","setcheckstudent","updatecheckstudent","event","target","checked","updateEditState","updateName","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,OAAO,SAASC,QAAT,GAAiC;AAAA;;AAEpC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAS,WAAT,CAAxC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAU,IAAV,CAAhD;;AACA,WAASS,kBAAT,CAA4BC,KAA5B,EAAgD;AAC5CF,IAAAA,eAAe,CAACE,KAAK,CAACC,MAAN,CAAaC,OAAd,CAAf;AACH;;AACD,WAASC,eAAT,CAAyBH,KAAzB,EAA6C;AACzCN,IAAAA,YAAY,CAACM,KAAK,CAACC,MAAN,CAAaC,OAAd,CAAZ;AACH;;AACD,WAASE,UAAT,CAAoBJ,KAApB,EAAwC;AACpCJ,IAAAA,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaI,KAAd,CAAX;AACH;;AACD,sBACI;AAAA,2BACI;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,KAAN;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,EAAE,EAAC,cAFP;AAGI,UAAA,KAAK,EAAC,YAHV;AAII,UAAA,OAAO,EAAEZ,SAJb;AAKI,UAAA,QAAQ,EAAEU;AALd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAA,kBACKV,SAAS,iBACN,QAAC,IAAD,CAAM,KAAN;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,EAAE,EAAC,YAFP;AAGI,UAAA,KAAK,EAAC,UAHV;AAII,UAAA,OAAO,EAAEI,YAJb;AAKI,UAAA,QAAQ,EAAEE;AALd;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,cAXJ,eAsBI;AAAA,kBACKN,SAAS,iBACN,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,eAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,IAAI,EAAC,QADT;AAEI,YAAA,KAAK,EAAEE,QAFX;AAGI,YAAA,QAAQ,EAAES;AAHd;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,cAtBJ,eAkCI;AAAA,mBACKT,QADL,OACgBE,YAAY,GAAG,IAAH,GAAU,QADtC,EAEK,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH;;GAzDeL,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nexport function EditMode(): JSX.Element {\n    type ChangeEvent = React.ChangeEvent<HTMLInputElement>;\n    const [editState, setEditState] = useState<boolean>(false);\n    const [userName, setUserName] = useState<string>(\"Your Name\");\n    const [checkstudent, setcheckstudent] = useState<boolean>(true);\n    function updatecheckstudent(event: ChangeEvent) {\n        setcheckstudent(event.target.checked);\n    }\n    function updateEditState(event: ChangeEvent) {\n        setEditState(event.target.checked);\n    }\n    function updateName(event: ChangeEvent) {\n        setUserName(event.target.value);\n    }\n    return (\n        <div>\n            <div>\n                <div>\n                    <h3>Edit Mode</h3>\n                    <Form.Check\n                        type=\"switch\"\n                        id=\"is-switch-on\"\n                        label=\"Edit Mode?\"\n                        checked={editState}\n                        onChange={updateEditState}\n                    />\n                </div>\n                <div>\n                    {editState && (\n                        <Form.Check\n                            type=\"switch\"\n                            id=\"is-student\"\n                            label=\"Student?\"\n                            checked={checkstudent}\n                            onChange={updatecheckstudent}\n                        />\n                    )}\n                </div>\n                <div>\n                    {editState && (\n                        <Form.Group controlId=\"changeTextBox\">\n                            <Form.Label>Change Name:</Form.Label>\n                            <Form.Control\n                                type=\"string\"\n                                value={userName}\n                                onChange={updateName}\n                            />\n                        </Form.Group>\n                    )}\n                </div>\n                <div>\n                    {userName} {checkstudent ? \"is\" : \"is not\"}\n                    {\" a student\"}\n                </div>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}